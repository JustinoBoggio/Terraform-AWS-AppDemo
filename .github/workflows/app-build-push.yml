name: app-build-push

on:
  push:
    branches: [ "main" ]
    paths:
      - "app/**"
      - ".github/workflows/app-build-push.yml"
  workflow_dispatch: {}

permissions:
  id-token: write
  contents: read
  packages: read

env:
  AWS_REGION: us-east-1

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app:
          - name: app-api
            context: app/api         # ruta al Dockerfile del API
          - name: app-web
            context: app/web         # ruta al Dockerfile del Front (si es distinto)
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS creds via OIDC (ECR push)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::215873709989:role/gha-app-dev   # ajusta si tu ARN difiere
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: gha-app-build

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Compute image tags
        id: meta
        run: |
          echo "sha=${GITHUB_SHA}" >> $GITHUB_OUTPUT

      - name: Build image (${{ matrix.app.name }})
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          REPO_URL="${ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${{ matrix.app.name }}"
          docker build -t "${REPO_URL}:${{ steps.meta.outputs.sha }}" -t "${REPO_URL}:latest" "${{ matrix.app.context }}"

      - name: Push image (${{ matrix.app.name }})
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          REPO_URL="${ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${{ matrix.app.name }}"
          docker push "${REPO_URL}:${{ steps.meta.outputs.sha }}"
          docker push "${REPO_URL}:latest"

      - name: Output image URI
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          echo "IMAGE_URI=${ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${{ matrix.app.name }}:${{ steps.meta.outputs.sha }}"
